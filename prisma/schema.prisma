// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  type      UsersType  @default(NORMAL)
  status    UserStatus @default(ACTIVE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  hours     Hours[] // Relação com o modelo Hours
  approvals Hours[] @relation("ApprovedHours") // Horas aprovadas pelo usuário

  @@map("users")
}

model Hours {
  id         String      @id @default(uuid())
  userId     String
  date       DateTime    @db.Date
  startTime  DateTime    @db.Time
  endTime    DateTime    @db.Time
  approved   HoursStatus @default(WAITING)
  approvedBy String? // Campo opcional para o ID do usuário que aprovou
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  user     Users  @relation(fields: [userId], references: [id])
  approver Users? @relation("ApprovedHours", fields: [approvedBy], references: [id])

  @@map("hours")
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

enum UsersType {
  ADMINISTRATOR
  NORMAL
}

enum HoursStatus {
  APPROVED
  REFUSED
  WAITING
}
